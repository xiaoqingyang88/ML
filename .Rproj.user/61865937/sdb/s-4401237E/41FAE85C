{
    "contents" : "---\ntitle: \"MLProject\"\nauthor: \"Xiaoqing Yang\"\ndate: \"Sunday, October 25, 2015\"\noutput: html_document\n---\n\n\n##Introduction\n\nThe data used for this project was collected from accelerometers on the belt, forearm, arm, and dumbell of 6 participants. They were asked to perform barbell lift correctly and incorrectly in 5 differet way. The objective of this project is to create a machine leaning model to classify the barbell lift activity as correct or incorrect based on the data collected from accelerometers. More information is available from the website here: <http://groupware.les.inf.puc-rio.br/har> (see the section on the Weight Lifting Exercise Dataset). \n\n##Method\n\nHere is the data used for building the model:\n<https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv>\n\nAnd here is the data for testing the model:\n<https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv>\n\nWe first split the data into two datasets: training dataset (60%) and testing dataset (40%).  We used training dataset and trained the model using Random Forest. And then we applied the trained model against the testing dataset and calcluated the ROC and confusionMatrix to evaluate the model. Finally, we used the built model to predict the outcome of the 20 participants in the test dataset.\n\n##\n##Data Preparation\n\nWe downloaded the data for model built and data for the testing.\n```{r}\n# read the train and test datasets\n\nmodelDataURL <- \"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv\"\ntestDataURL <- \"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv\"\n\n##download.file(modelDataURL, \"train.csv\", mode=\"w\")\nmodelData <- read.csv(\"train.csv\", as.is=TRUE)\n\n##download.file(testDataURL, \"test.csv\", mode=\"w\")\ntestData <- read.csv(\"test.csv\", as.is=TRUE)\n```\n\nConvert new_window and classe to factor.\n```{r}\n# Convert user_name, new_window, classe as factor\nmodelData$classe <- as.factor(modelData$classe)\nmodelData$new_window <- as.factor(modelData$new_window)\ntestData$new_window <- as.factor(testData$new_window)\n```\n\nDrop aggregated columns from the modelData \n```{r}\nname.list <- names(modelData)\nrm.list <- grep(\"(^max|^min|^kurtosis|^amplitude|^avg|^var|^skewness|^stddev)\", name.list)\nmodelData <- modelData[,-rm.list]\ntestData <- testData[,-rm.list]\n```\n\nDrop the attributes which are not related to the weight lifting activities, i.e., timestamps,  user_name, X, etc. All these attributes are specific to these datasets and meaningless in general.\n```{r}\ncol.list <- \n  c(\"user_name\", \"cvtd_timestamp\", \"X\", \"raw_timestamp_part_1\", \"raw_timestamp_part_2\" )\nfor (col in col.list) {\n  modelData[,col] <- NULL\n  testData[,col] <- NULL\n}\n```\n\nHere is the size information for both training and testing datasets.\n```{r}\ndim(modelData)\ndim(testData)\n```\n\nDivide the modelData into training (60%) testing (40%) datasets. Training dataset is used to train the model and testing dataset is used to validate the model. \n```{r warning=FALSE}\nlibrary(caret)\ninTrain <- createDataPartition(modelData$classe, p=0.6, list=FALSE)\ntrain.data <- modelData[inTrain,]\ntest.data <- modelData[-inTrain,]\n```\n\n##Model Training\n\nTrain the model with Random Forest algorithm and calculate the ROC and confusionMatrix of test data using this model.\n```{r warning=FALSE}\nlibrary(randomForest); \n# Train the model\nmodel.rf <- randomForest(classe ~ ., data=train.data)\nmodel.rf\n\n#Display the importance of the prediction variables\nimportance(model.rf)\n```\n\n##Model Evaluation\n\nNow, we applied the trained model to the test data:\n```{r}\npredicted <- predict(model.rf,newdata=test.data)\nobserved <- test.data$classe\ntable(observed, predicted)\n```\n\nAnd, here is the error rate of the prediction against the test data:\n```{r}\n1-sum(apply(table(observed,predicted),2,max))/length(observed)\n```\n\n##Prediction Using Built Model and Prepare for Sumission\n\nWe first do the prediction against the  test data using the trained model\"\"\n```{r}\n#Correct the levels to make it the same as training data\nlevels(testData$new_window)  <- c(\"no\", \"yes\")\n\n#Predict for the test data\nanswers = predict(model.rf, newdata=testData)\n```\n\nWe now prepare the output for submission:\n```{r}\n#prepare submission files\npml_write_files = function(x){\n  n = length(x)\n  for(i in 1:n){\n    filename = paste0(\"problem_id_\",i,\".txt\")\n    write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)\n  }\n}\npml_write_files(answers)\n```\n\n##Conclusion\n\nWe have split the data into training and testing datasets by 60% over 40%. We have trained the model using Random Forest alogrithm. The error rate for training set is 0.31% and the error rate for testing set is 0.29%. We have also used this model to predict the outcomes of 20 participants from the test data. \n",
    "created" : 1445787353719.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2192939059",
    "id" : "41FAE85C",
    "lastKnownWriteTime" : 1445789656,
    "path" : "C:/R Course/Meachine Learning/Project/ML/MLProject.Rmd",
    "project_path" : "MLProject.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}